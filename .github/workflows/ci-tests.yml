name: CI Tests
on:
  push:
    branches: [master, dev, feat/ci]
  pull_request:
    branches: [master, dev]

env:
  DEFAULT_PYTHON: 3.8

jobs:
  codestyle:
    name: Code Style
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda
        id: cache
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}
            -conda-${{ env.CACHE_NUMBER }}
            -${{ env.default-python }}
            -${{ hashFiles('environment.yml') }}

      - name: Create and activate conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          activate-environment: pandera-dev
          auto-update-conda: true
          python-version: ${{ env.default-python }}
          environment-file: environment.yml
          use-only-tar-bz2: true
          auto-activate-base: false

      - name: Activate cached conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit == 'true'
        with:
          activate-environment: pandera-dev

      - name: Conda info
        run: |
          conda info
          conda list

      - name: Check isort and black formatting
        run: >
          nox
          -db conda -r
          --non-interactive
          --session black isort

  lint:
    name: CI Tests (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda
        id: cache
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}
            -conda-${{ env.CACHE_NUMBER }}
            -${{ matrix.python-version }}
            -${{ hashFiles('environment.yml') }}

      - name: Create and activate conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          activate-environment: pandera-dev
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          use-only-tar-bz2: true
          auto-activate-base: false

      - name: Activate cached conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit == 'true'
        with:
          activate-environment: pandera-dev

      - name: Conda info
        run: |
          conda info
          conda list

      - name: Check requirements
        run: >
          nox
          -db conda -r
          --non-interactive
          --python ${{ matrix.python-version }}
          --session requirements-${{ matrix.python-version }}

      - name: Pylint
        run: >
          nox
          -db conda -r
          --non-interactive
          --python ${{ matrix.python-version }}
          --session lint-${{ matrix.python-version }}

      - name: Mypy Type Checking
        run: >
          nox
          -db conda -r
          --non-interactive
          --python ${{ matrix.python-version }}
          --session mypy-${{ matrix.python-version }}

  tests:
    name: >
      CI Tests (${{ matrix.python-version }},
      ${{ matrix.os }},
      pandas-${{ matrix.pandas-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        python-version: ["3.6", "3.7", "3.8", "3.9"]
        pandas-version: ["latest", "0.25.3"]

    defaults:
      run:
        shell: bash -l {0}

    steps:
      - uses: actions/checkout@v2

      - name: Cache conda
        id: cache
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}
            -conda-${{ env.CACHE_NUMBER }}
            -${{ matrix.python-version }}
            -${{ hashFiles('environment.yml') }}

      - name: Create and activate conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit != 'true'
        with:
          activate-environment: pandera-dev
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          environment-file: environment.yml
          use-only-tar-bz2: true
          auto-activate-base: false

      - name: Activate cached conda environment
        uses: conda-incubator/setup-miniconda@v2
        if: steps.cache.outputs.cache-hit == 'true'
        with:
          activate-environment: pandera-dev

      - name: Conda info
        run: |
          conda info
          conda list

      - name: Unit Tests - Core
        run: >
          nox
          -db conda -r
          --non-interactive
          --session "tests-${{ matrix.python-version }}(extra='core', pandas='${{ matrix.pandas-version }}')"

      - name: Unit Tests - Hypotheses
        run: >
          nox
          -db conda -r
          --non-interactive
          --session "tests-${{ matrix.python-version }}(extra='hypotheses', pandas='${{ matrix.pandas-version }}')"

      - name: Unit Tests - IO
        run: >
          nox
          -db conda -r
          --non-interactive
          --session "tests-${{ matrix.python-version }}(extra='io', pandas='${{ matrix.pandas-version }}')"

      - name: Unit Tests - Strategies
        run: >
          nox
          -db conda -r
          --non-interactive
          --session "tests-${{ matrix.python-version }}(extra='strategies', pandas='${{ matrix.pandas-version }}')"

      - name: Upload coverage to Codecov
        uses: "codecov/codecov-action@v1"
        with:
          fail_ci_if_error: true

      - name: Check Docs
        run: >
          nox
          -db conda -r
          --non-interactive
          --session "docs-${{ matrix.python-version }}(pandas='${{ matrix.pandas-version }}')"
