language: bash

cache:
  directories:
    - $HOME/miniconda3

before_cache:
  - rm -rf $CONDA_DIR/pkgs/cache
  - rm -rf $CONDA_DIR/envs/hosts
  - rm -rf $CONDA_DIR/conda-meta/history
  - touch $CONDA_DIR/conda-meta/history

os:
  - linux
  - osx
  - windows

env:
  - JOB="3.5" ENV_FILE="ci/deps/env_35.yml"
  - JOB="3.6" ENV_FILE="ci/deps/env_36.yml"
  - JOB="3.7" ENV_FILE="ci/deps/env_37.yml"
  - JOB="3.8" ENV_FILE="ci/deps/env_38.yml"
  - JOB="latest" ENV_FILE="ci/deps/env_latest.yml"

before_install:
  - |
    export CONDA_DIR="$HOME/miniconda3"
    if [ "${TRAVIS_OS_NAME}" == "windows" ]; then
        export CONDA_DIR=`cygpath -w $CONDA_DIR`
        export CONDA_BIN_DIR="$CONDA_DIR\scripts"
    else
        export CONDA_BIN_DIR="$CONDA_DIR/bin"
    fi
    export PATH="$CONDA_BIN_DIR:$PATH"

install:
  # Install Conda
  - |
    if [ "${TRAVIS_OS_NAME}" == "windows" ]; then
        choco install openssl.light
    fi

    if [ -d "$CONDA_DIR" ] && [ -e "$CONDA_BIN_DIR/conda" ]; then
        echo "Miniconda install already present from cache: $CONDA_DIR"
        rm -rf $CONDA_DIR/envs/hosts  # Just in case...
    else
        echo "Installing Miniconda..."
        rm -rf $CONDA_DIR  # Just in case...

        if [ "${TRAVIS_OS_NAME}" == "windows" ]; then
            wget https://repo.continuum.io/miniconda/Miniconda3-latest-Windows-x86_64.exe -O miniconda.exe || exit 1
            cmd //c "start /wait "" miniconda.exe /S /D=$CONDA_DIR"
        else
            if [ "${TRAVIS_OS_NAME}" == "osx" ]; then
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh || exit 1
            elif [ "${TRAVIS_OS_NAME}" == "linux" ]; then
                wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh || exit 1
            fi
            bash miniconda.sh -b -p "$CONDA_DIR" || exit 1
        fi
    fi

    echo "Configuring Miniconda..."
    conda config --set ssl_verify false || exit 1
    conda config --set always_yes true --set changeps1 false || exit 1

    echo "Updating Miniconda..."
    conda update conda
    conda update --all
    conda info -a || exit 1
  # Setup Conda Env
  - |
    conda env create -n hosts -f $ENV_FILE || exit 1
    source activate hosts

    python setup.py install
    conda list

script:
  # Use the conda environment
  - source activate hosts
  # Dependencies
  # Check that requirements-dev.text is generated exclusively by environment.yml
  - python ./scripts/generate_pip_deps_from_conda.py --compare
  # Linting
  - pylint pandera tests
  # Type checking
  - mypy pandera tests
  # Tests
  - pytest -v --cov=pandera tests/
  # Coverage
  - codecov
  # Check docs can build, treating warnings as errors
  - python -m sphinx -E -W -b=doctest "docs/source" "docs/_build"
